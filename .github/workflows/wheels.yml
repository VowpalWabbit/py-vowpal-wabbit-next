name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels_x64:
    name: Wheels ${{ matrix.os }} x86_64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        cibw_python: [ "cp38-*", "cp39-*", "cp310-*"]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v2.11.1
      env:
        CIBW_BUILD: ${{ matrix.cibw_python }}
        CIBW_ARCHS: x86_64
        CIBW_ENVIRONMENT_MACOS: CMAKE_TOOLCHAIN_FILE=${{github.workspace}}/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake
        CIBW_ENVIRONMENT_WINDOWS: VCPKG_FORCE_DOWNLOADED_BINARIES=true CMAKE_TOOLCHAIN_FILE=D:/a/py-vowpal-wabbit/py-vowpal-wabbit/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake # VCPKG_DEFAULT_TRIPLET=x64-windows-static
        CIBW_MANYLINUX_X86_64_IMAGE: vowpalwabbit/manylinux2014_x86_64-build

    - uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  build_wheels_macos_arm:
    name: Wheels ${{ matrix.os }} arm64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        cibw_python: [ "cp38-*", "cp39-*", "cp310-*"]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v2.11.1
      env:
        CIBW_BUILD: ${{ matrix.cibw_python }}
        CIBW_ARCHS_MACOS: arm64
        CIBW_ENVIRONMENT_MACOS: CMAKE_TOOLCHAIN_FILE=${{github.workspace}}/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake VCPKG_DEFAULT_TRIPLET=arm64-osx

    - uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  # upload_all:
  #   name: Upload if release
  #   needs: [build_wheels_x64, build_wheels_macos_arm, build_sdist]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release' && github.event.action == 'published'

  #   steps:
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: "3.x"

  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: artifact
  #       path: dist

  #   - uses: pypa/gh-action-pypi-publish@v1.5.1
  #     with:
  #       password: ${{ secrets.pypi_password }}
